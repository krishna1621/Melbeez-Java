aws.s3.key=${AWS_S3_KEY}
aws.s3.secret=${AWS_S3_SECRET}
aws.s3.bucket= ${AWS_S3_BUCKET}
aws.region=${AWS_REGION}
##This decides the store like, S3, GCP Object store, CEPHA etc.,
media.store=${MEDIA_STORE}

server.port=${SERVER_PORT}

spring.jpa.properties.hibernate.dialect =${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
spring.datasource.url=jdbc:postgresql://${DATASOURCE_HOST}:${DATASOURCE_PORT}/${DATASOURCE_DB}
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

spring.datasource.username=${DATASOURCE_USERNAME}
##postgres password.
spring.datasource.password=${DATASOURCE_PASSWORD}

spring.sql.init.mode=${SPRING_SQL_INIT_MODE}
##Insert the IP address of the front-end machine and run the front-end in below same url.,
# CORS Configuration
cors.allowed.origins=${CORS_ALLOWED_ORIGINS}


stripe.api.key=${STRIPE_API_KEY}

stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

payment.success.uri=https://preprod.melbeez.com/success
payment.cancel.uri=http://localhost:8085/cancel
akko.api.uri=${AKKO_API_URI}
akko.api.key=${AKKO_API_KEY}

spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB


springdoc.api-docs.path=/v1/swagger.json
springdoc.swagger-ui.path=/swagger-ui.html

